// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: voice.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StreamAudioResponse_Source int32

const (
	StreamAudioResponse_WHISPER StreamAudioResponse_Source = 0 // comes from the transcription service
	StreamAudioResponse_LLAMA   StreamAudioResponse_Source = 1 // comes from the text-generation service
)

// Enum value maps for StreamAudioResponse_Source.
var (
	StreamAudioResponse_Source_name = map[int32]string{
		0: "WHISPER",
		1: "LLAMA",
	}
	StreamAudioResponse_Source_value = map[string]int32{
		"WHISPER": 0,
		"LLAMA":   1,
	}
)

func (x StreamAudioResponse_Source) Enum() *StreamAudioResponse_Source {
	p := new(StreamAudioResponse_Source)
	*p = x
	return p
}

func (x StreamAudioResponse_Source) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StreamAudioResponse_Source) Descriptor() protoreflect.EnumDescriptor {
	return file_voice_proto_enumTypes[0].Descriptor()
}

func (StreamAudioResponse_Source) Type() protoreflect.EnumType {
	return &file_voice_proto_enumTypes[0]
}

func (x StreamAudioResponse_Source) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StreamAudioResponse_Source.Descriptor instead.
func (StreamAudioResponse_Source) EnumDescriptor() ([]byte, []int) {
	return file_voice_proto_rawDescGZIP(), []int{1, 0}
}

type AudioChunk struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []byte                 `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	SpeechStart   bool                   `protobuf:"varint,2,opt,name=speech_start,json=speechStart,proto3" json:"speech_start,omitempty"`
	SpeechEnd     bool                   `protobuf:"varint,3,opt,name=speech_end,json=speechEnd,proto3" json:"speech_end,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AudioChunk) Reset() {
	*x = AudioChunk{}
	mi := &file_voice_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AudioChunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AudioChunk) ProtoMessage() {}

func (x *AudioChunk) ProtoReflect() protoreflect.Message {
	mi := &file_voice_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AudioChunk.ProtoReflect.Descriptor instead.
func (*AudioChunk) Descriptor() ([]byte, []int) {
	return file_voice_proto_rawDescGZIP(), []int{0}
}

func (x *AudioChunk) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *AudioChunk) GetSpeechStart() bool {
	if x != nil {
		return x.SpeechStart
	}
	return false
}

func (x *AudioChunk) GetSpeechEnd() bool {
	if x != nil {
		return x.SpeechEnd
	}
	return false
}

// Combined response for both Whisper and Llama outputs
type StreamAudioResponse struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	Text          string                     `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`                                            // partial transcription or generated text
	Done          bool                       `protobuf:"varint,2,opt,name=done,proto3" json:"done,omitempty"`                                           // true on the final chunk (from Llama)
	Source        StreamAudioResponse_Source `protobuf:"varint,3,opt,name=source,proto3,enum=voice.StreamAudioResponse_Source" json:"source,omitempty"` // which service produced this message
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamAudioResponse) Reset() {
	*x = StreamAudioResponse{}
	mi := &file_voice_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamAudioResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamAudioResponse) ProtoMessage() {}

func (x *StreamAudioResponse) ProtoReflect() protoreflect.Message {
	mi := &file_voice_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamAudioResponse.ProtoReflect.Descriptor instead.
func (*StreamAudioResponse) Descriptor() ([]byte, []int) {
	return file_voice_proto_rawDescGZIP(), []int{1}
}

func (x *StreamAudioResponse) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *StreamAudioResponse) GetDone() bool {
	if x != nil {
		return x.Done
	}
	return false
}

func (x *StreamAudioResponse) GetSource() StreamAudioResponse_Source {
	if x != nil {
		return x.Source
	}
	return StreamAudioResponse_WHISPER
}

// (Optional) You can keep Transcription if used elsewhere
type Transcription struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Text          string                 `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Transcription) Reset() {
	*x = Transcription{}
	mi := &file_voice_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Transcription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transcription) ProtoMessage() {}

func (x *Transcription) ProtoReflect() protoreflect.Message {
	mi := &file_voice_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transcription.ProtoReflect.Descriptor instead.
func (*Transcription) Descriptor() ([]byte, []int) {
	return file_voice_proto_rawDescGZIP(), []int{2}
}

func (x *Transcription) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type GenerateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Prompt        string                 `protobuf:"bytes,1,opt,name=prompt,proto3" json:"prompt,omitempty"`
	MaxTokens     int32                  `protobuf:"varint,2,opt,name=max_tokens,json=maxTokens,proto3" json:"max_tokens,omitempty"`
	Temperature   float32                `protobuf:"fixed32,3,opt,name=temperature,proto3" json:"temperature,omitempty"`
	TopP          float32                `protobuf:"fixed32,4,opt,name=top_p,json=topP,proto3" json:"top_p,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GenerateRequest) Reset() {
	*x = GenerateRequest{}
	mi := &file_voice_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateRequest) ProtoMessage() {}

func (x *GenerateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_voice_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateRequest.ProtoReflect.Descriptor instead.
func (*GenerateRequest) Descriptor() ([]byte, []int) {
	return file_voice_proto_rawDescGZIP(), []int{3}
}

func (x *GenerateRequest) GetPrompt() string {
	if x != nil {
		return x.Prompt
	}
	return ""
}

func (x *GenerateRequest) GetMaxTokens() int32 {
	if x != nil {
		return x.MaxTokens
	}
	return 0
}

func (x *GenerateRequest) GetTemperature() float32 {
	if x != nil {
		return x.Temperature
	}
	return 0
}

func (x *GenerateRequest) GetTopP() float32 {
	if x != nil {
		return x.TopP
	}
	return 0
}

type GenerateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Text          string                 `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	Done          bool                   `protobuf:"varint,2,opt,name=done,proto3" json:"done,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GenerateResponse) Reset() {
	*x = GenerateResponse{}
	mi := &file_voice_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateResponse) ProtoMessage() {}

func (x *GenerateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_voice_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateResponse.ProtoReflect.Descriptor instead.
func (*GenerateResponse) Descriptor() ([]byte, []int) {
	return file_voice_proto_rawDescGZIP(), []int{4}
}

func (x *GenerateResponse) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *GenerateResponse) GetDone() bool {
	if x != nil {
		return x.Done
	}
	return false
}

var File_voice_proto protoreflect.FileDescriptor

const file_voice_proto_rawDesc = "" +
	"\n" +
	"\vvoice.proto\x12\x05voice\"b\n" +
	"\n" +
	"AudioChunk\x12\x12\n" +
	"\x04data\x18\x01 \x01(\fR\x04data\x12!\n" +
	"\fspeech_start\x18\x02 \x01(\bR\vspeechStart\x12\x1d\n" +
	"\n" +
	"speech_end\x18\x03 \x01(\bR\tspeechEnd\"\x9a\x01\n" +
	"\x13StreamAudioResponse\x12\x12\n" +
	"\x04text\x18\x01 \x01(\tR\x04text\x12\x12\n" +
	"\x04done\x18\x02 \x01(\bR\x04done\x129\n" +
	"\x06source\x18\x03 \x01(\x0e2!.voice.StreamAudioResponse.SourceR\x06source\" \n" +
	"\x06Source\x12\v\n" +
	"\aWHISPER\x10\x00\x12\t\n" +
	"\x05LLAMA\x10\x01\"#\n" +
	"\rTranscription\x12\x12\n" +
	"\x04text\x18\x01 \x01(\tR\x04text\"\x7f\n" +
	"\x0fGenerateRequest\x12\x16\n" +
	"\x06prompt\x18\x01 \x01(\tR\x06prompt\x12\x1d\n" +
	"\n" +
	"max_tokens\x18\x02 \x01(\x05R\tmaxTokens\x12 \n" +
	"\vtemperature\x18\x03 \x01(\x02R\vtemperature\x12\x13\n" +
	"\x05top_p\x18\x04 \x01(\x02R\x04topP\":\n" +
	"\x10GenerateResponse\x12\x12\n" +
	"\x04text\x18\x01 \x01(\tR\x04text\x12\x12\n" +
	"\x04done\x18\x02 \x01(\bR\x04done2R\n" +
	"\x0eWhisperService\x12@\n" +
	"\vStreamAudio\x12\x11.voice.AudioChunk\x1a\x1a.voice.StreamAudioResponse(\x010\x012M\n" +
	"\fLlamaService\x12=\n" +
	"\bGenerate\x12\x16.voice.GenerateRequest\x1a\x17.voice.GenerateResponse0\x01B\fZ\n" +
	"./proto;pbb\x06proto3"

var (
	file_voice_proto_rawDescOnce sync.Once
	file_voice_proto_rawDescData []byte
)

func file_voice_proto_rawDescGZIP() []byte {
	file_voice_proto_rawDescOnce.Do(func() {
		file_voice_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_voice_proto_rawDesc), len(file_voice_proto_rawDesc)))
	})
	return file_voice_proto_rawDescData
}

var file_voice_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_voice_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_voice_proto_goTypes = []any{
	(StreamAudioResponse_Source)(0), // 0: voice.StreamAudioResponse.Source
	(*AudioChunk)(nil),              // 1: voice.AudioChunk
	(*StreamAudioResponse)(nil),     // 2: voice.StreamAudioResponse
	(*Transcription)(nil),           // 3: voice.Transcription
	(*GenerateRequest)(nil),         // 4: voice.GenerateRequest
	(*GenerateResponse)(nil),        // 5: voice.GenerateResponse
}
var file_voice_proto_depIdxs = []int32{
	0, // 0: voice.StreamAudioResponse.source:type_name -> voice.StreamAudioResponse.Source
	1, // 1: voice.WhisperService.StreamAudio:input_type -> voice.AudioChunk
	4, // 2: voice.LlamaService.Generate:input_type -> voice.GenerateRequest
	2, // 3: voice.WhisperService.StreamAudio:output_type -> voice.StreamAudioResponse
	5, // 4: voice.LlamaService.Generate:output_type -> voice.GenerateResponse
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_voice_proto_init() }
func file_voice_proto_init() {
	if File_voice_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_voice_proto_rawDesc), len(file_voice_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_voice_proto_goTypes,
		DependencyIndexes: file_voice_proto_depIdxs,
		EnumInfos:         file_voice_proto_enumTypes,
		MessageInfos:      file_voice_proto_msgTypes,
	}.Build()
	File_voice_proto = out.File
	file_voice_proto_goTypes = nil
	file_voice_proto_depIdxs = nil
}
